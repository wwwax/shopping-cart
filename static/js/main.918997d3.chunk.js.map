{"version":3,"sources":["components/CartItem/CartItem.module.css","components/ProductItem/ProductItem.module.css","components/Cart/Cart.module.css","App.module.css","components/ProductItem/ProductItem.tsx","components/CartItem/CartItem.tsx","components/Cart/Cart.tsx","App.tsx","index.tsx"],"names":["module","exports","ProductItem","product","addToCart","className","styles","image","src","alt","title","price","Button","button","variant","color","onClick","CartItem","removeFromCart","container","row","description","total","amount","toFixed","counter","counterValue","buttonWrapper","id","Cart","items","selectedProducts","length","emptyList","map","item","reduce","acc","App","useState","products","setProducts","isCartOpen","setIsCartOpen","setSelectedProducts","getProducts","a","fetch","response","json","prev","find","el","useEffect","Grid","spacing","Drawer","anchor","open","onClose","Badge","cartButton","badgeContent","getSelectedProductsAmount","xs","sm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.918997d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CartItem_container__237_U\",\"row\":\"CartItem_row__2kofs\",\"description\":\"CartItem_description__11sce\",\"title\":\"CartItem_title__35OT_\",\"price\":\"CartItem_price__roufJ\",\"total\":\"CartItem_total__d9vC4\",\"image\":\"CartItem_image__2lIwd\",\"counterValue\":\"CartItem_counterValue__1Ggoo\",\"buttonWrapper\":\"CartItem_buttonWrapper__17BYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product\":\"ProductItem_product__1KZdF\",\"image\":\"ProductItem_image__340lG\",\"title\":\"ProductItem_title__2AccB\",\"price\":\"ProductItem_price__5SIaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cart_container__1xFz1\",\"title\":\"Cart_title__1aL2_\",\"total\":\"Cart_total__5dmNW\",\"emptyList\":\"Cart_emptyList__IMggW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3gMMg\",\"cartButton\":\"App_cartButton__1TAIp\"};","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { ProductItemType } from '../../types';\r\nimport styles from './ProductItem.module.css';\r\n\r\ntype Props = {\r\n  product: ProductItemType;\r\n  addToCart: (item: ProductItemType) => void;\r\n};\r\n\r\nconst ProductItem: React.FC<Props> = ({ product, addToCart }) => {\r\n  return (\r\n    <div className={styles.product}>\r\n      <img className={styles.image} src={product.image} alt={product.title} />\r\n      <div className={styles.title}>{product.title}</div>\r\n      <div className={styles.price}>${product.price}</div>\r\n      <Button\r\n        className={styles.button}\r\n        variant='contained'\r\n        color='primary'\r\n        onClick={() => addToCart(product)}>\r\n        Add To Cart\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import { ProductItemType } from '../../types';\r\nimport styles from './CartItem.module.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\ntype Props = {\r\n  product: ProductItemType;\r\n  addToCart: (item: ProductItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst CartItem: React.FC<Props> = ({ product, addToCart, removeFromCart }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.row}>\r\n        <div className={styles.description}>\r\n          <div className={styles.title}>{product.title}</div>\r\n          <div className={styles.price}>Price: ${product.price}</div>\r\n          <div className={styles.total}>\r\n            Total Price: ${(product.price * product.amount).toFixed(2)}\r\n          </div>\r\n        </div>\r\n        <img className={styles.image} src={product.image} alt={product.title} />\r\n      </div>\r\n\r\n      <div className={styles.counter}>\r\n        <div className={styles.counterValue}>{product.amount}</div>\r\n\r\n        <div className={styles.buttonWrapper}>\r\n          <Button\r\n            variant='contained'\r\n            color='secondary'\r\n            onClick={() => removeFromCart(product.id)}>\r\n            -\r\n          </Button>\r\n          <Button variant='contained' color='primary' onClick={() => addToCart(product)}>\r\n            +\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\nimport CartItem from '../CartItem';\r\nimport { ProductItemType } from '../../types';\r\nimport styles from './Cart.module.css';\r\n\r\ntype Props = {\r\n  selectedProducts: ProductItemType[];\r\n  addToCart: (item: ProductItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst Cart: React.FC<Props> = ({ selectedProducts, addToCart, removeFromCart }) => {\r\n  const totalSum = (items: ProductItemType[]) =>\r\n    items.reduce((acc, item) => acc + item.amount * item.price, 0);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Cart</h1>\r\n      {selectedProducts.length === 0 ? (\r\n        <p className={styles.emptyList}>No products in cart</p>\r\n      ) : null}\r\n\r\n      {selectedProducts.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          product={item}\r\n          addToCart={addToCart}\r\n          removeFromCart={removeFromCart}\r\n        />\r\n      ))}\r\n\r\n      <div className={styles.total}>Total: ${totalSum(selectedProducts).toFixed(2)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { useEffect, useState } from 'react';\r\nimport ProductItem from './components/ProductItem';\r\nimport Cart from './components/Cart';\r\n\r\n// material-ui\r\nimport { Grid } from '@material-ui/core';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\n\r\nimport { ProductItemType } from './types';\r\nimport styles from './App.module.css';\r\n\r\nconst App = () => {\r\n  const [products, setProducts] = useState<ProductItemType[]>([]);\r\n  const [isCartOpen, setIsCartOpen] = useState<boolean>(false);\r\n  const [selectedProducts, setSelectedProducts] = useState<ProductItemType[]>([]);\r\n\r\n  const getProducts = async () => {\r\n    const response = await fetch('https://fakestoreapi.com/products');\r\n    const products = await response.json();\r\n    setProducts(products);\r\n  };\r\n\r\n  const addToCart = (item: ProductItemType) => {\r\n    setSelectedProducts((prev) => {\r\n      const isProductInCart = selectedProducts.find((el) => el.id === item.id);\r\n\r\n      if (isProductInCart) {\r\n        return prev.map((el) => {\r\n          return el.id === item.id ? { ...el, amount: el.amount + 1 } : el;\r\n        });\r\n      }\r\n\r\n      return [...prev, { ...item, amount: 1 }];\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (id: number) => {\r\n    setSelectedProducts((prev) =>\r\n      prev.reduce((acc, item) => {\r\n        if (item.id === id) {\r\n          if (item.amount === 1) return acc;\r\n\r\n          return [...acc, { ...item, amount: item.amount - 1 }];\r\n        } else return [...acc, item];\r\n      }, [] as ProductItemType[]),\r\n    );\r\n  };\r\n\r\n  const getSelectedProductsAmount = (products: ProductItemType[]) =>\r\n    products.reduce((acc, el) => el.amount + acc, 0);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid className={styles.container} container spacing={2}>\r\n      <Drawer anchor='right' open={isCartOpen} onClose={() => setIsCartOpen(false)}>\r\n        <Cart\r\n          selectedProducts={selectedProducts}\r\n          addToCart={addToCart}\r\n          removeFromCart={removeFromCart}\r\n        />\r\n      </Drawer>\r\n\r\n      <Badge\r\n        className={styles.cartButton}\r\n        badgeContent={getSelectedProductsAmount(selectedProducts)}\r\n        color='secondary'\r\n        onClick={() => setIsCartOpen(true)}>\r\n        <AddShoppingCartIcon />\r\n      </Badge>\r\n\r\n      {products.map((product) => (\r\n        <Grid item key={product.id} xs={12} sm={3}>\r\n          <ProductItem product={product} addToCart={addToCart} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}